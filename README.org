* Introduction

这篇教程会讲解一些计算机基本工具的使用。

* 命令行

Note: Linux用户不在教程考虑范围，因为能使用Linux的同学基本不需要看这篇教程了。

命令行（Command-line Terminal）是一种与计算机进行交互的基本工具，其基本工作流程就是你在一个窗口里面输入一行命令，计算机做出对这个命令的回应。很多童鞋可能会问了，既然现在的操作系统们都有了图形界面，为什么要对着一个黑乎乎的窗口用这么low的方式莱和计算机交互呢？

其实这么做是基于以下几点的考虑：
+ 当完成大量重复性的工作时，很难使用图形界面来进行自动化的操作方式来完成一个任务。比如：计导TA要把收上来的100个人的作业程序都编译一遍，那么依次打开每个工程并编译时必定是十分令人沮丧的工作（请珍爱你们的计导TA们，虽然我不是计导TA。。。）。这个时候如果TA能够在命令行里面输入短短几句shell脚本，就能完成“批量编译”的过程，那么将大大降低TA批作业的时间以及大家等着出分的时间。
+ 并不是所有的计算机都会有图形界面，例如大多数网络服务器就不会提供图形界面甚至是显卡，因为服务器主要是提供计算和存储资源的设备。这个时候我们和那些服务器之间的沟通方式也只有基于字符串传递的命令行了。
+ 命令行能够高度配合其他的一些已有的系统工具从而大大提高（码农们的）工作效率，例如我经常使用的emacs编辑器可以通过F4切出一个命令行终端，如果要在当前目录下载一个数据包文件 XXX.avi ，就可以通过在命令行当中输入 ~wget XXX.avi~ 的方式来让下载文件和我当前编辑另一个文件的工作无缝衔接，而不是先切到浏览器或者迅雷再进行下载文件的操作，从而大大提高了工作效率。类似的操作也可以从一部分同学非常熟悉的sublime text编辑器通过 ~Ctrl+`~ （键盘1左边那个键）切出来一个控制台来实现。关于如何使用命令行形成“工作流”的细节是后话。

说了这么多，那我们来看看怎么用典型的方式来使用控制台吧：

** Windows 系统
无论是win几的系统，我们都是需要进入一个MS-DOS的环境，这个MS-DOS应该算是windows的命令行版本，相信很多同学至少在配置宿舍网络的时候使用过MS-DOS（ipconfig）。我一直认为按 ~win键+r~ 然后在运行里面输入cmd三个字母是打开MS-DOS命令行最方便的方式，当然，这里的cmd是一个模拟当年MS-DOS环境的程序（只不过伪装得太深了），所以你也可以去 ~C:\windows\system32\~ 这个目录下面找到程序 ~cmd.exe~ 然后绑定个快捷键上去（其实具体我也不知道怎么绑）。（以下统称命令行为cmd）

打开了cmd之后，我们可以看到开头的两行字：
#+BEGIN_EXAMPLE
Microsoft Windows [Version X.X.XXXX]
(c) 20XX Microsoft Corporation. All rights reserved.
#+END_EXAMPLE

*** Working Directory
紧接着一行是一个文件目录名+一个大于号 ~>~ 例如我打开之后的cmd就是这样：
#+BEGIN_EXAMPLE
C:\Users\Sorrow17>_
#+END_EXAMPLE
之前这个目录名对我们使用cmd很关键，这个目录名的正统名称为 *“working directory“* （工作目录）。通常来说，一个directory（目录）在windows系统当中由一个字符串表示，格式为 ~盘符（在哪个盘）：（冒号）\（反斜杠）一级目录\二级目录\...~ , 举个例子来讲，我将Firefox浏览器安装在了D盘，那么这个安装目录就是 ~D:\Mozilla Firefox\~ 。相似的，Firefox的运行文件路径即为 ~D:\Mozilla Firefox\Firefox.exe~ 。回到 working directory的问题，如果我们把cmd看成是一个打开的“资源管理器”，那么这个working directory就是我们当前 _在资源管理器当中能够看到的那一层目录_ 。如果你使用的是 ~win+r~ 然后输入cmd的快捷键组合来打开cmd，那么出现的目录名字就应该是 ~C:\Users\你的用户名~ 这个目录，以下假设我们教程当中的系统用户名是john。

**** 绝对路径和相对路径
在正式进入使用cmd命令之前，我们需要了解一个较为关键的概念：相对和绝对路径的问题。

所谓绝对路径，就是一种更什么外部因素都没有关系的方式表示一个目录/文件，我们上文提到的所有表达目录的方式都是绝对表示法，例如刚刚提到的 ~D:\Mozilla Firefox\Firefox.exe~ 。所谓“绝对”的含义是我们从哪个盘开始通过反斜杠 ~\~ 分隔开的 一级一级目录一步一步找到最终我们需要的目录的过程。然而，在很多场合下这种方式不够简便灵活，所以在操作系统中我们还有第二种选择来表示一个目录：相对路径。

所谓相对路径，就是一种跟外部环境相关的表示路径的方式。什么叫做“外部环境”呢？也许在上一段你就会有这个疑问，其实我们从现在开始可以把“外部环境”看成是一个大型目录集合，以下统称“上下文目录”（这是我发明的黑话），里面存放了许多我们经常会访问的目录。特殊地，在我们运行cmd的时候， *working directory 也会被“加载”到这个集合当中* ，假设当前的working directory是 ~D:\Mozilla Firefox\~ ，那么如果我跟cmd说（就是在cmd当中输入） “ ~Firefox.exe~ ”这个文件，cmd就会思考一些深奥的问题，比如，这个 ~Firefox.exe~ 看着好像不像刚才提到的绝对路径，那么他会做一件事，就是翻出那张“上下文目录”的集合，逐一地在集合中的每一个目录查找这个输入的文件，直到第一次找到了这个文件，比如我输入的 ~Firefox.exe~ 恰好在我的working directory（ ~D:\Mozilla Firefox\~ ）下的时候，系统会明白，我是要打开这个目录下的firefox浏览器。所以这个时候我们获得了一种省略前缀目录来定位一个目录/文件的方法，所以可以看成是“相对”于一些已有的路径（尤其是 working directory）来表示一个目录/文件的表示法。这种设定有一个好处，那就是我们可以少打很多字- -，当然，这么做我们还获得了较大的灵活性，这一点我们以后可以慢慢谈。

不过我们注意到很多时候我们要找的目录/文件其实并不会在“上下文目录”集合中，那么这个时候我们只能够使用绝对目录来对一个目录/文件来进行定位了，所以我们会在实际任务当中交替地使用绝对和相对路径表示法。

*** ~dir~ 命令
在cmd当中输入
#+BEGIN_SRC shell
C:\Users\john>dir
#+END_SRC
并猛击回车，我们会看到当前 ~C:\Users\john\~ (即working directory) 目录下所有的文件的简略信息（例如修改时间，文件类型和文件名），以我的电脑为例：
#+BEGIN_EXAMPLE
 Volume in drive C is Windows8_OS
 Volume Serial Number is 0614-5C8F

 Directory of C:\Users\sorrow17

2014/12/25  02:23    <DIR>          .
2014/12/25  02:23    <DIR>          ..
2014/12/27  14:56    <DIR>          .backup
2014/12/25  02:23             9,252 .emacs
2014/12/28  21:15    <DIR>          .emacs.d
2014/12/03  00:14    <DIR>          .gimp-2.8
2014/12/04  16:20                54 .gitconfig
2014/11/01  18:04    <DIR>          .idlerc
2014/12/17  13:08    <DIR>          .lein
2014/10/25  23:57    <DIR>          .m2
2014/12/19  01:20    <DIR>          .matplotlib
2014/12/02  23:16    <DIR>          .thumbnails
2014/10/24  19:40                 0 agent.log
2014/11/14  15:08    <DIR>          Contacts
2014/12/28  18:59    <DIR>          Desktop
2014/12/10  15:35    <DIR>          Documents
2014/12/28  20:51    <DIR>          Downloads
2014/11/14  15:08    <DIR>          Favorites
2014/11/14  15:08    <DIR>          Links
2014/11/28  11:52    <DIR>          mplayer
2014/11/14  15:08    <DIR>          Music
2014/12/28  18:59    <DIR>          OneDrive
2014/12/08  20:34    <DIR>          Pictures
2014/11/26  14:53    <DIR>          pip
2014/11/14  15:08    <DIR>          Saved Games
2014/11/14  15:08    <DIR>          Searches
2014/12/28  14:45    <DIR>          Videos
               3 File(s)          9,306 bytes
              24 Dir(s)  66,317,733,888 bytes free
#+END_EXAMPLE
注意: 这个”文件列表”的前两行有两个文件名分别为 ~.~ 和 ~..~ 的目录，这两个文件夹分别指向当前的目录（ ~C:\Users\john\~ ）和当前目录的上一层目录（ ~C:\Users\~ ）。

当然，只能查看当前的文件夹里面有什么文件是远远不够的，我们还需要查看其他文件夹的文件的内容，所以这个时候我们应该在 ~dir~ 命令后面加入一个“参数”来表达我们到底想要查看哪一个目录的内容，具体而言，如果我们想要查看C盘根目录里面的内容，我们可以键入以下的命令：

#+BEGIN_EXAMPLE
C:\Users\john>cd c:\
#+END_EXAMPLE
注意：windows当中不会区分一个目录/文件名的大小写。所以 ~C:\~ 和 ~c:\~ 代表了一样的路径，但是我们最好在所有场合将同样的目录的大小写情况保持一致。

*** ~cd~ 命令
